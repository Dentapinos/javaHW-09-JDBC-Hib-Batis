<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mappers.TaskMapper">

    <resultMap id="taskResultMap" type="Task">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="deadline" column="deadline" javaType="java.time.LocalDate" jdbcType="DATE"/>
        <result property="description" column="description"/>
        <result property="type" column="type"/>
        <association property="employee" javaType="Employee">
            <id property="id" column="em_id"/>
            <result property="name" column="em_name"/>
            <result property="birthDate" column="em_date" javaType="java.time.LocalDate" jdbcType="DATE"/>
        </association>
    </resultMap>


    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tasks (name, deadline, description, type, employee_id)
        VALUES (#{name}, #{deadline}, #{description}, #{type}, #{employee.id, jdbcType=INTEGER})
    </insert>

    <select id="getById" resultMap="taskResultMap" parameterType="long">
        SELECT t.*, e.id as em_id, e.name as em_name, e.birth_date as em_date
        FROM tasks t
                 LEFT JOIN employees e ON t.employee_id = e.id
        WHERE t.id = #{id}
    </select>

    <update id="update" parameterType="Task">
        UPDATE tasks
        SET name        = #{name},
            deadline    = #{deadline},
            description = #{description},
            type        = #{type},
            employee_id = #{employee.id, jdbcType=INTEGER}
        WHERE id = #{id}
    </update>

    <delete id="deleteAll">
        DELETE
        FROM tasks
    </delete>

    <delete id="deleteById" parameterType="long">
        DELETE
        FROM tasks
        WHERE id = #{id}
    </delete>

    <select id="getAll" resultMap="taskResultMap">
        SELECT t.*, e.id as em_id, e.name as em_name, e.birth_date as em_date
        FROM tasks t
                 LEFT JOIN employees e ON t.employee_id = e.id
    </select>

    <select id="getEmployeeByTaskId" resultMap="org.example.mappers.EmployeeMapper.employeeResultMap"
            parameterType="long">
        SELECT t.*, e.id as em_id, e.name as em_name, e.birth_date as em_date
        FROM tasks t
                 LEFT JOIN employees e ON t.employee_id = e.id
        WHERE t.id = #{id}
    </select>

</mapper>